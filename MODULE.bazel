# *******************************************************************************
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0
#
# SPDX-License-Identifier: Apache-2.0
# *******************************************************************************

module(
    name = "score_reference_integration",
    version = "0.0.0",
    compatibility_level = 0,
)

include("//:git_override.MODULE.bazel")

# for building documentation, verifying traceability etc.
bazel_dep(name = "score_platform", version = "0.3.0")
bazel_dep(name = "score_bazel_platforms", version = "0.0.2")

# QNX toolchain
bazel_dep(name = "score_toolchains_qnx", version = "0.0.1")
git_override(
    module_name = "score_toolchains_qnx",
    remote = "https://github.com/eclipse-score/toolchains_qnx.git",
    commit = "9e2ea88985243231bec59cef023eefb5f6dfd967",
)
toolchains_qnx = use_extension("@score_toolchains_qnx//:extensions.bzl", "toolchains_qnx")
toolchains_qnx.sdp(
    sha256 = "f2e0cb21c6baddbcb65f6a70610ce498e7685de8ea2e0f1648f01b327f6bac63",
    strip_prefix = "installation",
    url = "https://www.qnx.com/download/download/79858/installation.tgz",
)
use_repo(toolchains_qnx, "toolchains_qnx_sdp")
use_repo(toolchains_qnx, "toolchains_qnx_qcc")

#gcc toolchain for baselibs
bazel_dep(name = "score_toolchains_gcc", version = "0.4", dev_dependency=False)
gcc = use_extension("@score_toolchains_gcc//extentions:gcc.bzl", "gcc", dev_dependency=False)
gcc.toolchain(
    url = "https://github.com/eclipse-score/toolchains_gcc_packages/releases/download/0.0.1/x86_64-unknown-linux-gnu_gcc12.tar.gz",
    sha256 = "457f5f20f57528033cb840d708b507050d711ae93e009388847e113b11bf3600",
    strip_prefix = "x86_64-unknown-linux-gnu",
)
gcc.extra_features(
    features = [
        "minimal_warnings",
        "treat_warnings_as_errors",
    ],
)
gcc.warning_flags(
    minimal_warnings = ["-Wall", "-Wno-error=deprecated-declarations", "-Wno-error=narrowing"],
    strict_warnings = ["-Wextra", "-Wpedantic"],
    treat_warnings_as_errors = ["-Werror"],
)
use_repo(gcc, "gcc_toolchain", "gcc_toolchain_gcc")
register_toolchains("@gcc_toolchain//:all")

# LLVM Toolchains
bazel_dep(name = "toolchains_llvm", version = "1.2.0") # persistency module uses 1.2.0 and does not work with 1.4.0 yet
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    cxx_standard = {"": "c++17"},
    llvm_version = "19.1.0",
)
use_repo(llvm, "llvm_toolchain")
use_repo(llvm, "llvm_toolchain_llvm")

register_toolchains("@llvm_toolchain//:all")

## needed additions to build
bazel_dep(name = "testing-utils")
git_override(
    module_name = "testing-utils",
    commit = "a847c7464cfa47e000141631d1223b92560d2e58",  # tag v0.2.0
    remote = "https://github.com/qorix-group/testing_tools.git",
)

# # TODO: What is this for?
archive_override(
    module_name = "rules_boost",
    strip_prefix = "rules_boost-master",
    urls = ["https://github.com/nelhage/rules_boost/archive/refs/heads/master.tar.gz"],
)

# # TODO: we cannot use communication without including TRLC here?
bazel_dep(name = "trlc", version = "0.0.0")
git_override(
    module_name = "trlc",
    remote = "https://github.com/bmw-software-engineering/trlc.git",
    commit = "650b51a47264a4f232b3341f473527710fc32669",  # trlc-2.0.2 release
)

# System/Basics

## Python
bazel_dep(name = "rules_python", version = "1.4.1")

PYTHON_VERSION = "3.12"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    is_default = True,
    python_version = PYTHON_VERSION,
)
use_repo(python)
